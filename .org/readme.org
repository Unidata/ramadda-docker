#+options: ':nil *:t -:t ::t <:t H:4 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+options: auto-id:t
#+options: H:6

#+title: readme
#+date: <2023-04-24 Mon>
#+author: Julien Chastang
#+email: chastang@ucar.edu
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 28.2 (Org mode 9.7-pre)

#+PROPERTY: header-args :eval no :results none

#+STARTUP: overview

* Setup                                                            :noexport:
  :PROPERTIES:
  :CUSTOM_ID: h-F864C586
  :END:

#+BEGIN_SRC emacs-lisp :eval yes
  (setq org-confirm-babel-evaluate nil)
#+END_SRC

Publishing

#+BEGIN_SRC emacs-lisp :eval yes
  (setq base-dir (concat (projectile-project-root) ".org"))

  (setq pub-dir (projectile-project-root))

  (setq org-publish-project-alist
        `(("unidata-ramadda-readme"
            :base-directory ,base-dir
            :recursive t
            :base-extension "org"
            :publishing-directory ,pub-dir
            :publishing-function org-gfm-publish-to-gfm)))
#+END_SRC

* Unidata RAMADDA Docker
:PROPERTIES:
:CUSTOM_ID: h-58AAF24A
:END:

Dockerized [[https://ramadda.org][RAMADDA]] server.

** Introduction
:PROPERTIES:
:CUSTOM_ID: h-440D6E11
:END:

This repository contains files necessary to build and run a RAMADDA Docker container. The RAMADDA Docker images associated with this repository are [[https://hub.docker.com/r/unidata/ramadda-docker/][available on DockerHub]].

*** Quickstart
:PROPERTIES:
:CUSTOM_ID: h-2B7ACAE3
:END:

#+begin_src sh
  docker run -d -p 80:8080 unidata/ramadda-docker:<version>
#+end_src

** Versions
   :PROPERTIES:
   :CUSTOM_ID: h-833DC148
   :END:

See tags listed [[https://hub.docker.com/r/unidata/ramadda-docker/tags][on dockerhub]]. Our security protocols have become stricter, and any image linked to a CVE must be taken down immediately from DockerHub. We strive to maintain the security of this project's DockerHub images by updating them with the latest upstream improvements. If you have any concerns in this area, please email us at [[mailto:security@unidata.ucar.edu][security@unidata.ucar.edu]] to bring them to our attention.

** Prerequisites
:PROPERTIES:
:CUSTOM_ID: h-23902167
:END:

Before you begin using this Docker container project, make sure your system has Docker installed. Docker Compose is optional but recommended.
** Installation
:PROPERTIES:
:CUSTOM_ID: h-4DC46B26
:END:


You can either pull the image from DockerHub with:

#+begin_src sh
  docker pull unidata/ramadda-docker:<version>
#+end_src


Or you can build it yourself with:

  1. **Clone the repository**: ~git clone https://github.com/Unidata/ramadda-docker.git~       
  2. **Navigate to the project directory**: ~cd ramadda-docker~
  3. **Build the Docker image**: ~docker build -t ramadda-docker:<version>~ .

** Usage
:PROPERTIES:
:CUSTOM_ID: h-232B8397
:END:
*** Memory
    :PROPERTIES:
    :CUSTOM_ID: h-A19AC365
    :END:

Tomcat web applications and RAMADDA can require large amounts of memory to run. This container is setup to run Tomcat with a default [[file:files/javaopts.sh][4 gigabyte memory allocation]]. When running this container, ensure your VM or hardware can accommodate this memory requirement.

*** Docker compose
   :PROPERTIES:
   :CUSTOM_ID: h-31327E59
   :END:

To run the RAMADDA Docker container, beyond a basic Docker setup, we recommend installing [[https://docs.docker.com/compose/][docker-compose]]. However, ~docker-compose~ use is not mandatory. There is an example [[https://github.com/Unidata/ramadda-docker/blob/master/docker-compose.yml][docker-compose.yml]] in this repository.

**** Running RAMADDA
    :PROPERTIES:
    :CUSTOM_ID: h-B6696F84
    :END:

Once you have completed your setup you can run the container with:

#+BEGIN_SRC sh
  docker-compose up -d
#+END_SRC

The output of such command should be something like:

#+BEGIN_EXAMPLE
  Creating ramadda
#+END_EXAMPLE

**** Stopping RAMADDA
    :PROPERTIES:
    :CUSTOM_ID: h-4F5F0E81
    :END:

To stop this container:

#+BEGIN_SRC sh
  docker-compose stop
#+END_SRC

**** Delete RAMADDA Container
    :PROPERTIES:
    :CUSTOM_ID: h-105EE424
    :END:

To clean the slate and remove the container (not the image, the container):

#+BEGIN_SRC sh
  docker-compose rm -f
#+END_SRC

*** RAMADDA
:PROPERTIES:
:CUSTOM_ID: h-1D163FA5
:END:
**** Create RAMADDA Directories
:PROPERTIES:
:CUSTOM_ID: h-FA04ED59
:END:

Create the local directories defined in the docker-compose.yml for the RAMADDA =/data/repository= and =/data/repository/logs= directories, and the Tomcat =/usr/local/tomcat/logs= directory. For example:

#+begin_src sh
  mkdir repository tomcat-logs ramadda-logs
#+end_src

**** RAMADDA pw.properties File
:PROPERTIES:
:CUSTOM_ID: h-A3E47BAB
:END:

Inside the =repository= directory, create the ~pw.properties~ file. The contents of this ~.properties~ file will look something like:

#+begin_src sh
  ramadda.install.password=mysecretpassword
#+end_src

Replace mysecretpassword with the password of your choosing.
     
*** Upgrading
    :PROPERTIES:
    :CUSTOM_ID: h-3A7881FD
    :END:

Upgrading to a newer version of the container is easy. Simply stop the container via ~docker~ or ~docker-compose~, followed by

#+BEGIN_SRC sh
  docker pull unidata/ramadda-docker:<version>
#+END_SRC

and restart the container.  Refer to the new version from the command line or in the ~docker-compose.yml~.

Note that a given version of the RAMADDA image *does not* remain frozen in time. It can get rebuilt time and again as upstream image updates need to be incorporated into this RAMADDA image. It may be confusing for a versioned image to evolve, but it is the convention in Dockerland.
 
*** Check What is Running
   :PROPERTIES:
   :CUSTOM_ID: h-7A9DACE9
   :END:
**** curl
    :PROPERTIES:
    :CUSTOM_ID: h-004CE742
    :END:

At this point you should be able to do:

#+BEGIN_SRC sh
  curl localhost:80/repository
  # or whatever port you mapped to outside the container in the docker-compose.yml
#+END_SRC

and get back a response that looks something like

#+BEGIN_EXAMPLE
  <!DOCTYPE html>
  <html>
  <head><title>Installation</title>
  ...
  </html>
#+END_EXAMPLE

**** docker ps
    :PROPERTIES:
    :CUSTOM_ID: h-B3CF66F2
    :END:

If you encounter a problem there, you can also:

#+BEGIN_SRC sh
  docker ps
#+END_SRC

which should give you output that looks something like this:

#+BEGIN_EXAMPLE
CONTAINER ID IMAGE                  COMMAND                CREATED      STATUS     PORTS                                   NAMES
7d7f65b66f8e unidata/ramadda-docker:latest "/bin/sh -c ${CATALIN" 21 hours ago Up 21 hours 8080/tcp, 0.0.0.0:80->8080/tcp ramaddadocker_ramadda_1
#+END_EXAMPLE

to obtain the ID of the running RAMADDA container. You can enter the container with:

#+BEGIN_SRC sh
  docker exec -it <ID> bash
#+END_SRC

Use ~curl~ *inside* the container to verify RAMADDA is running:

#+BEGIN_SRC sh
  curl localhost:8080/repository
#+END_SRC

you should get a response that looks something like:

#+BEGIN_EXAMPLE
  <!DOCTYPE html>
  <html>
  <head><title>Installation</title>
  ...
  </html>
#+END_EXAMPLE

** Configuration
:PROPERTIES:
:CUSTOM_ID: h-7781CDC8
:END:
*** Docker compose
:PROPERTIES:
:CUSTOM_ID: h-16477010
:END:
**** Basic
    :PROPERTIES:
    :CUSTOM_ID: h-475FD8D0
    :END:

Define directory and file paths for log files, Tomcat, RAMADDA, and data in [[https://github.com/Unidata/ramadda-docker/blob/master/docker-compose.yml][docker-compose.yml]].

*** Tomcat
    :PROPERTIES:
    :CUSTOM_ID: h-442C5DE6
    :END:

RAMADDA container is based off of the [[https://hub.docker.com/_/tomcat/][canonical Tomcat container]] with [[https://hub.docker.com/r/unidata/tomcat-docker/][some additional security hardening measures]]. Tomcat configuration can be done by mounting over the appropriate directories in ~CATALINA_HOME~ (=/usr/local/tomcat=).

*** Java Configuration Options
    :PROPERTIES:
    :CUSTOM_ID: h-F0219C98
    :END:

The Java configuration options (~JAVA_OPTS~) are configured in =${CATALINA_HOME}/bin/javaopts.sh= (see [[file:files/javaopts.sh][javaopts.sh]]) inside the container. Note this file is copied inside the container during the Docker build. See the ~docker-compose~ section above for configuring some of the environment variables of this file.

*** Configurable Tomcat UID and GID
    :PROPERTIES:
    :CUSTOM_ID: h-15BF48EB
    :END:

[[https://github.com/Unidata/tomcat-docker#configurable-tomcat-uid-and-gid][See parent container]].

*** HTTP Over SSL
    :PROPERTIES:
    :CUSTOM_ID: h-BAD3F95E
    :END:

Please see Tomcat [[https://github.com/Unidata/tomcat-docker#http-over-ssl][parent container repository]] for HTTP over SSL instructions.

** Support
   :PROPERTIES:
   :CUSTOM_ID: h-4585A68C
   :END:

If you have a question or would like support for this RAMADDA Docker container, consider [[https://github.com/Unidata/thredds-docker/issues][submitting a GitHub issue]].
